#!/usr/bin/env bash
#PBS -N ARGOS_Kilobot
#PBS -j oe
#PBS -l walltime=60:00:00

#stop on errors
set -e

# Get experiment params
EXP_NUM=${1}
ARGOS_IN="${2}"
BEHAVIOR_EXECUTABLE="${3}"
EXPERIMENT_BASEDIR="${4}"
KILOBOT_META_STUFF_DELAY=${5}
CHECK_IF_FINISHED_DELAY=${6}
NUM_EXPERIMENTS=${7}
TOPOLOGY=${8}
NUM_ROBOTS=${9}
MSG_DROP_PROB=${10}

ulimit -n $((${NUM_ROBOTS} * 2 + 1000))

# Run jobs (in background)
experiment_dir="$EXPERIMENT_BASEDIR/exp${EXP_NUM}"
mkdir -p "$experiment_dir"
argos_out="$experiment_dir/config.argos"
log_file="$experiment_dir/log.txt"
res_file="$experiment_dir/res.csv"
kilobot_csv_file="$experiment_dir/status_logs.csv"

# Generate argos file with the appropriate params
sed -e "s|RANDOM_SEED|$EXP_NUM|g" \
    -e "s|BEHAVIOR_EXECUTABLE|$BEHAVIOR_EXECUTABLE|g" \
    -e "s|LOG_FILE|$log_file|g" \
    -e "s|RES_FILE|$res_file|g" \
    -e "s|KILOBOT_CSV_FILE|$kilobot_csv_file|g" \
    -e "s|KILOBOT_META_STUFF_DELAY|$KILOBOT_META_STUFF_DELAY|g" \
    -e "s|CHECK_IF_FINISHED_DELAY|$CHECK_IF_FINISHED_DELAY|g" \
    -e "s|TOPOLOGY|$TOPOLOGY|g" \
    -e "s|NUM_ROBOTS|$NUM_ROBOTS|g" \
    -e "s|MSG_DROP_PROB|$MSG_DROP_PROB|g" \
    "$ARGOS_IN" > "$argos_out"

argos3 -c "$argos_out"
