#!/usr/bin/env bash
#PBS -j oe

#stop on errors
set -e

# Get experiment params
EXPERIMENT_NUMBER=${1}
ARGOS_IN="${2}"
FOOTBOT_CONTROLLER_LIB="${3}"
LOOP_FUNCTIONS_LIB="${4}"
EXPERIMENT_DIR="${5}"
EXPERIMENT_OUTDIR="${6}"
REALTIME_OUTPUT_FILE="${7}"
FINAL_RES_CSV="${8}"
FOOTBOT_STATUS_LOG_DELAY=${9}
WALLTIME=${10}
STEPS_TO_STALL=${11}
PROTOCOL=${12}
TOPOLOGY=${13}
NUM_ROBOTS=${14}
PACKET_DROP_PROB=${15}
ENTRIES_SHOULD_BECOME_INACTIVE=${16}

# Run job
mkdir -p "$EXPERIMENT_DIR"
ARGOS_OUT="$EXPERIMENT_DIR/config.argos"
LOG_FILE="$EXPERIMENT_DIR/log.txt"
RES_FILE="$EXPERIMENT_DIR/res.csv"
FOOTBOT_CSV_FILE="$EXPERIMENT_DIR/status_logs.csv"

# Generate argos file with the appropriate params
sed -e "s|EXPERIMENT_NUMBER|$EXPERIMENT_NUMBER|g" \
    -e "s|FOOTBOT_CONTROLLER_LIB|$FOOTBOT_CONTROLLER_LIB|g" \
    -e "s|LOOP_FUNCTIONS_LIB|$LOOP_FUNCTIONS_LIB|g" \
    -e "s|LOG_FILE|$LOG_FILE|g" \
    -e "s|RES_FILE|$RES_FILE|g" \
    -e "s|FOOTBOT_CSV_FILE|$FOOTBOT_CSV_FILE|g" \
    -e "s|FOOTBOT_STATUS_LOG_DELAY|$FOOTBOT_STATUS_LOG_DELAY|g" \
    -e "s|WALLTIME|$WALLTIME|g" \
    -e "s|STEPS_TO_STALL|$STEPS_TO_STALL|g" \
    -e "s|PROTOCOL|$PROTOCOL|g" \
    -e "s|TOPOLOGY|$TOPOLOGY|g" \
    -e "s|NUM_ROBOTS|$NUM_ROBOTS|g" \
    -e "s|PACKET_DROP_PROB|$PACKET_DROP_PROB|g" \
    -e "s|ENTRIES_SHOULD_BECOME_INACTIVE|$ENTRIES_SHOULD_BECOME_INACTIVE|g" \
    -e "s|REALTIME_OUTPUT_FILE|$REALTIME_OUTPUT_FILE|g" \
    "$ARGOS_IN" > "$ARGOS_OUT"

# Perform experiment
argos3 -c "$ARGOS_OUT"

# Remove realtime output
if [ "$REALTIME_OUTPUT_FILE" != "" ]
then
    rm "$REALTIME_OUTPUT_FILE"
fi

# Copy generated files
if [ "$EXPERIMENT_OUTDIR" != "" ]; then
    mkdir -p "$EXPERIMENT_OUTDIR"
    cp -r "${EXPERIMENT_DIR}" "${EXPERIMENT_OUTDIR}/.."
fi


# Write experiment results to final result file.
(cat $RES_FILE | sed '/^$/d') 1>> $FINAL_RES_CSV
