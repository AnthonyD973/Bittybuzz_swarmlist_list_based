#!/bin/bash

# ==============================
# =    FUNCTION DEFINITIONS    =
# ==============================

conduct_experiment() {
    subdir="exp_${topology}Topology_${num_robots}Robots_${packet_drop_prob}MsgDropProb/exp${i}"

    # Run experiment
    case $RUN_OR_SUBMIT in

        "run")
            experiment_dir="$WD/$subdir"
            mkdir -p "$experiment_dir"
            ("$GIT_ROOT/src/experimenters/job_runner" \
            $i \
            "$ARGOS_IN" \
            "$FOOTBOT_CONTROLLER_LIB" \
            "$LOOP_FUNCTIONS_LIB" \
            "$experiment_dir" \
            "" \
            "" \
            "$FINAL_RES_CSV" \
            $FOOTBOT_STATUS_LOG_DELAY \
            $topology $num_robots $packet_drop_prob $ENTRIES_SHOULD_BECOME_INACTIVE)
            ;;

        "submit")
            # Don't send more than 500 jobs at the same time.
            while [ $(qselect -u $(whoami) | wc -l) -ge 500 ]; do sleep 10; done
            echo "STARTING: ${i}-th experiment with ${topology}, ${num_robots}, ${packet_drop_prob}."

            experiment_dir="$LSCRATCH/$subdir"
            experiment_outdir="$WD/$subdir"

            # Create ouptut dir and realtime file.
            mkdir -p "$experiment_outdir"
            realtime_output_file="$experiment_outdir/realtime_output.txt"
            echo "" > "$realtime_output_file"

            # Submit experiment.
            qsub -F " \
            $i \
            \"$ARGOS_IN\" \
            \"$FOOTBOT_CONTROLLER_LIB\" \
            \"$LOOP_FUNCTIONS_LIB\" \
            \"$experiment_dir\" \
            \"$experiment_outdir\" \
            \"$realtime_output_file\" \
            \"$FINAL_RES_CSV\" \
            $FOOTBOT_STATUS_LOG_DELAY \
            $topology $num_robots $packet_drop_prob $ENTRIES_SHOULD_BECOME_INACTIVE" \
            "$GIT_ROOT/src/experimenters/job_runner"
            ;;

        *)
            echo "Please specify either \"run\" or \"submit\" as target."
            exit 1

    esac
    sleep 1
}

##################################################

conduct_experiment_set() {
    TOPOLOGIES="${1}"
    NUMS_ROBOTS="${2}"
    PACKET_DROP_PROBS="${3}"
    for topology in $TOPOLOGIES
    do
        for num_robots in $NUMS_ROBOTS
        do
            for packet_drop_prob in $PACKET_DROP_PROBS
            do
                i=1
                while [ $i -le $num_experiments ]
                do
                    conduct_experiment
                    i=$(($i+1))
                done
            done
        done
    done
}

# ==============================
# =           SCRIPT           =
# ==============================

res1=$(date +%s.%N)

# Get args and set vars
RUN_OR_SUBMIT=${1}
BINARY_DIR="${2}"

GIT_ROOT=$(git rev-parse --show-toplevel)
WD="$BINARY_DIR/experiment"

# Backup and remove existing simulation results
rm -rf "$BINARY_DIR/experiment.old/"
cp -r  "$WD" "$BINARY_DIR/experiment.old/" 2> /dev/null
rm -rf "$WD"

# Go to working dir
mkdir -p "$WD"
cd "$WD"

# Set common experiment params
ARGOS_IN="$GIT_ROOT/src/argos/swarmlist_sim.argos"
FINAL_RES_CSV="$WD/res.csv"
FOOTBOT_CONTROLLER_LIB="$BINARY_DIR/controllers/libFootbotController.so"
LOOP_FUNCTIONS_LIB="$BINARY_DIR/loops/libexp_loop_func.so"
FOOTBOT_STATUS_LOG_DELAY=1000
ENTRIES_SHOULD_BECOME_INACTIVE=false

num_experiments=1
conduct_experiment_set "line" "20" "0.00"

# ##################################################

# num_experiments=1
# conduct_experiment_set "line" "10 50 100 200 300 400 500 600 700 800 900 1000 1500 2000 2500 3000 4000 5000" "0.00"

# ##################################################

# num_experiments=30
# conduct_experiment_set "line" "10 50 100 200 300 500 800 1000 2000" "0.25"

# ##################################################

# num_experiments=30
# conduct_experiment_set "line" "10 50 100 200 300 400 500" "0.50"

# ##################################################

# num_experiments=30
# conduct_experiment_set "line" "10 30 50 100 200 250 300 350 400" "0.75"

# ##################################################

# num_experiments=1
# conduct_experiment_set "scalefree" "10 50 100 200 300 400 500 600 700 800 900 1000 1500 2000 2500 3000 5000 7000 8000 9000 10000 12000" "0.00"

# ##################################################

# num_experiments=30
# conduct_experiment_set "scalefree" "10 50 100 200 500 1000 2000 3000 5000" "0.25"

# ##################################################

# num_experiments=30
# conduct_experiment_set "scalefree" "10 50 100 200 300 500 800 1000 2000" "0.50"

# ##################################################

# num_experiments=30
# conduct_experiment_set "scalefree" "10 50 100 200 300 400 500 800" "0.75"

# ##################################################

# Concatenate smaller result CSV files into a single one.
RESULT_CSV_FILES=$(find -type f -name "res.csv" | sort -z)
echo -n "Topology,Number of robots,Message drop probability,Consensus time (timesteps),Messages sent (total),Messages received (total),Avg. bandwidth (B/(timestep*footbot)),Avg. received bandwidth (B/(timestep*footbot))" > $FINAL_RES_CSV

# Echo time taken

res2=$(date +%s.%N)
dt=$(echo "$res2 - $res1" | bc)
dd=$(echo "$dt/86400" | bc)
dt2=$(echo "$dt-86400*$dd" | bc)
dh=$(echo "$dt2/3600" | bc)
dt3=$(echo "$dt2-3600*$dh" | bc)
dm=$(echo "$dt3/60" | bc)
ds=$(echo "$dt3-60*$dm" | bc)

printf "Total runtime: %d:%02d:%02d:%02.4f\n" $dd $dh $dm $ds
