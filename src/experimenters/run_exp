#!/bin/bash

res1=$(date +%s.%N)

# Get args and set vars
RUN_OR_SUBMIT=${1}
BINARY_DIR="${2}"

GIT_ROOT=$(git rev-parse --show-toplevel)
WD="$BINARY_DIR/experiment"

# Backup and remove existing simulation results
rm -rf "$BINARY_DIR/experiment.old/"
cp -r  "$WD" "$BINARY_DIR/experiment.old/" 2> /dev/null
rm -rf "$WD"

# Go to working dir
mkdir -p "$WD"
cd "$WD"

# Set common experiment params
ARGOS_IN="$GIT_ROOT/src/argos/swarmlist_sim.argos"
FINAL_RES_CSV="$WD/res.csv"
FOOTBOT_CONTROLLER_LIB="$BINARY_DIR/controllers/libFootbotController.so"
LOOP_FUNCTIONS_LIB="$BINARY_DIR/loops/libexp_loop_func.so"
NUM_EXPERIMENTS=1
FOOTBOT_STATUS_LOG_DELAY=100
ENTRIES_SHOULD_BECOME_INACTIVE=false

# Set variable experiment params
for topology in line
do
    for num_robots in 50 # {10..20..10}
    do
        for packet_drop_prob in 0.00 # 0.25 0.50 0.75
        do
            i=1
            while [ $i -le $NUM_EXPERIMENTS ]
            do
                subdir="exp_${topology}Topology_${num_robots}Robots_${packet_drop_prob}MsgDropProb"

                # Run experiment
                case $RUN_OR_SUBMIT in

                    "run")
                        experiment_basedir="$WD/$subdir"
                        mkdir -p "$experiment_basedir"
                        ("$GIT_ROOT/src/experimenters/job_runner" \
                        $i \
                        "$ARGOS_IN" \
                        "$FOOTBOT_CONTROLLER_LIB" \
                        "$LOOP_FUNCTIONS_LIB" \
                        "$experiment_basedir" \
                        "" \
                        "" \
                        "$FINAL_RES_CSV" \
                        $FOOTBOT_STATUS_LOG_DELAY \
                        $topology $num_robots $packet_drop_prob $ENTRIES_SHOULD_BECOME_INACTIVE)
                        ;;

                    "submit")
                        experiment_basedir="$LSCRATCH/$subdir"
                        realtime_output_file="$WD/exp${i}/realtime_output.txt"
                        qsub -F " \
                        $i \
                        \"$ARGOS_IN\" \
                        \"$FOOTBOT_CONTROLLER_LIB\" \
                        \"$LOOP_FUNCTIONS_LIB\" \
                        \"$experiment_basedir\" \
                        \"$WD\" \
                        \"$realtime_output_file\" \
                        \"$FINAL_RES_CSV\" \
                        $FOOTBOT_STATUS_LOG_DELAY \
                        $topology $num_robots $packet_drop_prob $ENTRIES_SHOULD_BECOME_INACTIVE" \
                        "$GIT_ROOT/src/experimenters/job_runner"
                        ;;

                    *)
                        echo "Please specify either \"run\" or \"submit\" as target."
                        exit 1

                esac

                i=$(($i+1))
            done
        done
    done
done

# Concatenate smaller result CSV files into a single one.
RESULT_CSV_FILES=$(find -type f -name "res.csv" | sort -z)
echo -n "Topology,Number of robots,Message drop probability,Consensus time (timesteps),Messages sent (total),Messages received (total),Avg. bandwidth (B/(timestep*footbot)),Avg. received bandwidth (B/(timestep*footbot))" > $FINAL_RES_CSV

# Echo time taken

res2=$(date +%s.%N)
dt=$(echo "$res2 - $res1" | bc)
dd=$(echo "$dt/86400" | bc)
dt2=$(echo "$dt-86400*$dd" | bc)
dh=$(echo "$dt2/3600" | bc)
dt3=$(echo "$dt2-3600*$dh" | bc)
dm=$(echo "$dt3/60" | bc)
ds=$(echo "$dt3-60*$dm" | bc)

printf "Total runtime: %d:%02d:%02d:%02.4f\n" $dd $dh $dm $ds
